---
  apiVersion: "apps/v1"
  kind: "Deployment"
  metadata: 
    name: "dashboard"
    labels: 
      app: "dashboard"
  spec: 
    selector: 
      matchLabels: 
        app: "dashboard"
    replicas: 1
    template: 
      metadata: 
        labels: 
          app: "dashboard"
      spec: 
        containers: 
          - 
            name: "dashboard"
            image: "dashboard"
            ports: 
              - 
                containerPort: 8080
            readinessProbe: 
              httpGet: 
                path: "/actuator/health"
                port: 8080
              initialDelaySeconds: 10
              timeoutSeconds: 2
              periodSeconds: 5
              failureThreshold: 10
            livenessProbe: 
              httpGet: 
                path: "/actuator/health"
                port: 8080
              initialDelaySeconds: 120
              timeoutSeconds: 2
              periodSeconds: 5
              failureThreshold: 5
---
  apiVersion: "v1"
  kind: "Service"
  metadata: 
    name: "dashboard"
    labels: 
      app: "dashboard"
  spec: 
    ports: 
      - 
        port: 8080
        targetPort: 8080
    selector: 
      app: "dashboard"
---
  apiVersion: "apps/v1"
  kind: "Deployment"
  metadata: 
    name: "drive"
    labels: 
      app: "drive"
  spec: 
    selector: 
      matchLabels: 
        app: "drive"
    replicas: 1
    template: 
      metadata: 
        labels: 
          app: "drive"
      spec: 
        containers: 
          - 
            name: "drive"
            image: "drive"
            ports: 
              - 
                containerPort: 8080
            readinessProbe: 
              httpGet: 
                path: "/actuator/health"
                port: 8080
              initialDelaySeconds: 10
              timeoutSeconds: 2
              periodSeconds: 5
              failureThreshold: 10
            livenessProbe: 
              httpGet: 
                path: "/actuator/health"
                port: 8080
              initialDelaySeconds: 120
              timeoutSeconds: 2
              periodSeconds: 5
              failureThreshold: 5
---
  apiVersion: "v1"
  kind: "Service"
  metadata: 
    name: "drive"
    labels: 
      app: "drive"
  spec: 
    ports: 
      - 
        port: 8080
        targetPort: 8080
    selector: 
      app: "drive"
---
  apiVersion: "apps/v1"
  kind: "Deployment"
  metadata: 
    name: "indexer"
    labels: 
      app: "indexer"
  spec: 
    selector: 
      matchLabels: 
        app: "indexer"
    replicas: 1
    template: 
      metadata: 
        labels: 
          app: "indexer"
      spec: 
        containers: 
          - 
            name: "indexer"
            image: "indexer"
            ports: 
              - 
                containerPort: 8080
            readinessProbe: 
              httpGet: 
                path: "/actuator/health"
                port: 8080
              initialDelaySeconds: 10
              timeoutSeconds: 2
              periodSeconds: 5
              failureThreshold: 10
            livenessProbe: 
              httpGet: 
                path: "/actuator/health"
                port: 8080
              initialDelaySeconds: 120
              timeoutSeconds: 2
              periodSeconds: 5
              failureThreshold: 5
---
  apiVersion: "v1"
  kind: "Service"
  metadata: 
    name: "indexer"
    labels: 
      app: "indexer"
  spec: 
    ports: 
      - 
        port: 8080
        targetPort: 8080
    selector: 
      app: "indexer"
---
  apiVersion: "apps/v1"
  kind: "Deployment"
  metadata: 
    name: "video-processing"
    labels: 
      app: "video-processing"
  spec: 
    selector: 
      matchLabels: 
        app: "video-processing"
    replicas: 1
    template: 
      metadata: 
        labels: 
          app: "video-processing"
      spec: 
        containers: 
          - 
            name: "video-processing"
            image: "video-processing"
            ports: 
              - 
                containerPort: 8080
            readinessProbe: 
              httpGet: 
                path: "/actuator/health"
                port: 8080
              initialDelaySeconds: 10
              timeoutSeconds: 2
              periodSeconds: 5
              failureThreshold: 10
            livenessProbe: 
              httpGet: 
                path: "/actuator/health"
                port: 8080
              initialDelaySeconds: 120
              timeoutSeconds: 2
              periodSeconds: 5
              failureThreshold: 5
---
  apiVersion: "v1"
  kind: "Service"
  metadata: 
    name: "video-processing"
    labels: 
      app: "video-processing"
  spec: 
    ports: 
      - 
        port: 8080
        targetPort: 8080
    selector: 
      app: "video-processing"
---
  apiVersion: "apps/v1"
  kind: "Deployment"
  metadata: 
    name: "notification"
    labels: 
      app: "notification"
  spec: 
    selector: 
      matchLabels: 
        app: "notification"
    replicas: 1
    template: 
      metadata: 
        labels: 
          app: "notification"
      spec: 
        containers: 
          - 
            name: "notification"
            image: "notification"
            ports: 
              - 
                containerPort: 8080
            readinessProbe: 
              httpGet: 
                path: "/actuator/health"
                port: 8080
              initialDelaySeconds: 10
              timeoutSeconds: 2
              periodSeconds: 5
              failureThreshold: 10
            livenessProbe: 
              httpGet: 
                path: "/actuator/health"
                port: 8080
              initialDelaySeconds: 120
              timeoutSeconds: 2
              periodSeconds: 5
              failureThreshold: 5
---
  apiVersion: "v1"
  kind: "Service"
  metadata: 
    name: "notification"
    labels: 
      app: "notification"
  spec: 
    ports: 
      - 
        port: 8080
        targetPort: 8080
    selector: 
      app: "notification"
---
  apiVersion: "networking.k8s.io/v1"
  kind: "Ingress"
  metadata: 
    name: ""
    annotations: 
      kubernetes.io/ingress.class: "nginx"
  spec: 
    rules: 
      - 
        host: ""
        http: 
          paths: 
            - 
              path: "/dashboards"
              pathType: "Prefix"
              backend: 
                service: 
                  name: "dashboard"
                  port: 
                    number: 8080
